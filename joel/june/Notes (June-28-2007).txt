Prepare the "Add Adjustments" page for the new form submission method.
Everything that needs to be included for a charge record, will require either a hidden or visible HTML input element in the page.



HtmlTemplate:

$this->Submit($strLabel) --> creates a submit button, which when clicked will point to a new php file but not load it using AJAX
$this->AjaxSubmit($strLabel, $strId, OutputMode(HTML|AJAX), [$strTemplate], [$strMethod])
$this->FormStart($Id, $AppTemplate, $Method)  --> "<form Id=$Id Action='vixen.php/$AppTemplate/$Method/'>"
$this->FormEnd() --> </form>


TODO
move all the css classes you're using to above the line



If a record being added has an attribute like "CreatedOn", it probably shouldn't set a value for this until just before it inserts/updates
to the database.  These attributes could be flagged in UIAppDocumentation in either the InputType or ValidationRule
They will have their value set in the appTemplate::method that handles the saving. (and loading)


TODO
I should make a ValidationRule function called MoneyValue which checks if the value is a float and can
have a '$' in front of the float.  This could be done as a regular expression but would be faster done using string functions.
If I validate a monetary value and it has a $ sign in it, this will have to be removed before the value is saved to the database.
This might have to be done in DBObject::Save().  If the properties documentation has the ValidationRule as MoneyValue then it should
trim the dollar sign, if it exists.


TODO
Stick an AjaxSubmit button on the form and get it to work.

TODO
Get the "Add Adjustment" popup working again.

TODO NOW!!!
Get the "Apply Changes" button working on the Invoices and Payments screen
How will this work if we are only updating a few properties of a row of a table
Jared says that DBObject->Save() should currently be able to handle this scenario

TODO
Finish off the new RenderHidden methods in token.php
(DONE)

