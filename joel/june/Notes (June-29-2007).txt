At some point we will have to build pagination functionality into the VixenTable class. (Or somewhere more appropriate)

TODO
Get the details form working and the add adjustment form working
The details form is working

TODO
finish the MoneyValue validation rule.  Although stuff like validation doesn't need to be done until the entire
"Invoices and Payments" functionality is done.

TODO
make sure the AjaxSend method reads the VixenFormId hidden element to get the form Id
Application->Get() should handle loading of the formId into $GLOBALS['*SubmittedForm']
it will recieve a GET variable called VixenFormId=(formId)
if you used $this->FormStart("AccountDetails", "Account", "Details")
then the get variable VixenFormId="AccountDetails"
(DONE)

NOTE
Application->FormStart is not specifying a "method=get or post" in the form tag.
(fixed method=post)

TODO
Read yesterday's notes
(DONE)


The way things will be rendered as invalid on the page is:
	when the SubmittedData class reads in the GET, POST and AJAX variables into DBObjects they should be validated then.
	(actually, validation is executed from within Load and AjaxLoad)
	within the html template, before rendering a property we should check if it is invalid and if it is then render it in a context
	that will display it as invalid.
