TODO
Make the AddNote, AddAdjustment and AddRecurringAdjustment generic enough to work in all contexts that they will be used in.
For example, you can add an Account note, or a Service Note.  You can add an Adjustment to an Account, or a single Service of that account
DONE for AddAdjustment
DONE for AddRecurringAdjustment

TODO
Make sure Ross has included that EnabledELB thing, when you are activating or archiving a service, or when you change the value of the 
indial100 property when editing a service.  A service is using ELB if Indial100 == 1 and there are unarchived records relating to the service,
in the ServiceExtension table.

TODO
The user should be able to specify what plan to use, when adding a service.  Currently this is not the case.  Currently you can change the plan
by viewing the service and then choosing the "Change Plan option".  Check that Ross' "View Service Details" page is displaying the current
plan that the service is using.  I don't think it currently does this because there is a special function called FindCurrentPlan, which Rich
made last week so that I could use it in the web_app

TODO
When the user chooses a rateplan, it should set the PreSelect and FullService fields of the Service record.  If these have changed then
we have to automatically trigger a Provision request.

TODO
Check out the proper Knowledge Base Article on DPS as it pertains to the logic behind unarchiving a service which MUST be implemented 
in the "Edit Service" functionality.  Jared said we have to implement this logic.
Maybe I should do it.


TODO
Get Rich to rename in svn:
	page_template/knowledge_base_doc_view.php to page_template/knowledge_base_view_article.php
	html_template/knowledge_base_doc_view.php to html_template/knowledge_base_article_view.php



TODO FIRST (after those other things you were going to do)
Write down an algorithm for adding a service and editing one
FNNs are specified in the service table.  To check if one is currently in use, or is scheduled to be used, or has been used in the
past (by one or more services) you will be querying this table

TODO
your list of call types to filter by, in the HtmlTemplateServiceCdrList, should be in alphabetical order.
DONE

TODO
Check that exactly the same fields are being set when adding an adjustment in the new system, as the old system.
I'm sure I did this during testing.

TODO
There is currently a bug in the javascript for Add Recurring adjustment which calculates the Recursion Charge when
you are changing the Minimum Charge.  If you have set the minimum charge, and then you change this, it updates the
Recursion Charge, but when you change the minimum charge back to what it originally was, the recursion charge does
not get updated.  It is not a huge bug as I would hope the user isn't messing around with these fields too much
when adding a recurring adjustment.
