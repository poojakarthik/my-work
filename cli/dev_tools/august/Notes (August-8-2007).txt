Check out stuff in yesterdays notes.

TODO
Finish testing the WHERE clause functionality of the DBObject class
(DONE)

TODO
Test the web_app in Internet Explorer
Some of the javascript doesn't work.
I noticed that in firefox I can execute a javascript function and not specify parameters I don't need, but in IE this dies.
A lot of the styling isn't working.  The page should be centered in the window, but isn't
The onclick functionality of the VixenTable does not work and infact crashes saying AppTemplate::Vixen() does not exist which could be a problem with
not specifying all parameters of a javascript function.

I'm pretty sure event handlers are specified differently in IE than they are in FireFox

My logout button is executing Javascript.  I think the only reason why I did that was to display a popup when the user is successfully logged out.
This probably isn't necessary, you could just redirect the user to the main page of the TelcoBlue website.

TODO!
web_app will require its own javascript directory.  All applications made using this framework, will require their own javascript directory.
(DONE)


TODO
Get Ross to convert that HACK we did, so that it utilises the new WHERE clause functionality of the DBObject class
(DONE)

TODO
Also make sure we implement the EnableELB and DisableELB in the stuff Ross is working on


TODO
Build:
page to list all knowledge base articles
page to view single kb article

make:
app_template/knowledge_base.php
page_template/knowledge_base_list_articles.php
page_template/knowledge_base_view_article.php
html_template/knowledge_base_article_list (contexts: ALL_ARTICLES, RELATED_ARTICLES)
html_template/knowledge_base_article.php

List of tests:
Test loading a single record using the WHERE clause as DBO()->Object->Where->Property = Value (DONE)
Test loading a single record using the WHERE clause as DBO()->Object->Where->SetString("Property = value OR property2 = value 2") (DONE)
Test using a WHERE clause that should retrieve more than 1 record. (only one record should be returned and we don't have to do any controlling of order) (DONE)
Compare using the where clause to just using DBO()->Object->IdProperty = Value for the cases of when a record can be retrieved and when can't
be retrieved. (DONE)
Test DBO()->Object->Where->Clean(); (DONE)
Test the return value of DBO()->Object->Load(); (DONE)

DBObject WHERE functionality has passed all tests

