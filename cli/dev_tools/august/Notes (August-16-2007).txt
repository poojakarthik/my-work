Find out what Service->Plan retrieves.  Is it just the Id of the plan of the service? What if since the 
service was archived, the plan has expired (or is archived)?  Does Service-Plan account for rate group overrides?

Service->Plan retrieves the details of the current plan for the service (the record from the RatePlan table)

In the current system, if you have to create a new service to unarchive an old one, It won't copy across the
mobile detail, or inbound detail from the old one.  I don't know about the ServiceExtension table.



Where should the functionality of the intranet_app Service class go?  I'm assuming in the AppTemplateService class,
but this doesn't really represent a service as an object.  And neither does DBO()->Service



The "Add Service" page has to bring up the fields required to add a record to the ServiceAddress table, if the Service is
a LandLine.  This is the only Service type that requires a record in the ServiceAddress table.
The "Edit Service" page may also need to display these details for a landline


In the "View Service Details" page, there is an option called Provisioning, if the Service is a landline.


TODO!
Find out if the ServiceRecurringCharge table is actually used.  It doesn't look like it is.  It has no records in dps or catwalk
and this is even after I added a service recurring charge using the old system.

Make sure you go through the existing logic, for each operation you can perform on a service, to make sure that we are 
taking it all into account.

TODO!
An ELB checkbox has to be added to the Edit Service Details page.  It will only be shown if the Service is an Indial100.
This is the property that is listed under the Indial100 property in the View Service Details page.
I'm pretty sure only Landlines can be Indial100.
In the Edit Service Details page, when you check the ELB checkbox, it will add 100 records to the ServiceExtension table.
When you disableELB, these records are all marked as archived.

TODO
How would you go about having the 2 services merge and appear as a single service on the customer's invoice?
I don't think you have to do anything beyond creating the new service and copying most things from the old service over to the new one

Rich has added those new Columns to the RatePlan table (CarrierFullService and CarrierPreselection)  I think you have to accomodate these
in the Add Service and Edit Service and View Service details pages (or maybe just the Change Plan page).  I think you have to trigger 
auto provisioning if your newly selected plan has different values (CarrierFullService, etc) to the old plan.

*************************How the way CarrierFullService (CFS) and CarrierPreselection (CP) fields work:***************************************
There are CFS and CP fields in both the RatePlan and Service tables.
When a plan is declared for a Service, or the plan is changed for a service, you should compare the new plan's CFS and CP fields
with that of the Service and if they differ you will have to trigger an automatic provisioning request.  Once this is done,
you should update the CFS and CP columns of the Service table.
I think you should make a generic function for changing a plan, which can handle the situations when a service doesn't have a current plan, and
when it does have a current plan.  This will be used by the Add Service, Bulk Add Service, Change Plan and Bulk Select Plan pages
IT SHOULD BE GENERIC ENOUGH TO PUT IN functions.php
TODO TODO TODO



I could make a function that performs an update of a service and its return value could be TRUE if the update worked,
OR a string defining an error message to display, if it failed. OR FALSE if it failed and a generic error message should be used.
Make it like this:
	if (SubmittedForm("EditService", "Save"))
	{
		TransactionStart();
		$mixReturn = $this->EditService();
		if ($mixReturn === TRUE)
		{
			TransactionCommit();
			// relocate page
		}
		elseif ($mixReturn === FALSE)
		{
			TransactionRollback();
			// Assume $this->EditService() has output what message it wants to display and has declared what action to take
		}
		else
		{
			TransactionRollback();
			//Output $mixReturn as an error message and perform a default action such as rerendering a HtmlTemplate
		}
	}




